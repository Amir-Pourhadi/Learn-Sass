@use "sass:math";

$utilities: (
  "padding": (
    "prefix": "p",
    "values": (
      "0": 0,
      "1": $base-spacing,
      "2": $base-spacing * 2,
      "3": $base-spacing * 4,
      "4": $base-spacing * 6,
      "5": $base-spacing * 8,
    ),
  ),
  "padding-top": (
    "prefix": "pt",
    "values": (
      "0": 0,
      "1": $base-spacing,
      "2": $base-spacing * 2,
      "3": $base-spacing * 4,
      "4": $base-spacing * 6,
      "5": $base-spacing * 8,
    ),
  ),
  "padding-right": (
    "prefix": "pr",
    "values": (
      "0": 0,
      "1": $base-spacing,
      "2": $base-spacing * 2,
      "3": $base-spacing * 4,
      "4": $base-spacing * 6,
      "5": $base-spacing * 8,
    ),
  ),
  "padding-bottom": (
    "prefix": "pb",
    "values": (
      "0": 0,
      "1": $base-spacing,
      "2": $base-spacing * 2,
      "3": $base-spacing * 4,
      "4": $base-spacing * 6,
      "5": $base-spacing * 8,
    ),
  ),
  "padding-left": (
    "prefix": "pl",
    "values": (
      "0": 0,
      "1": $base-spacing,
      "2": $base-spacing * 2,
      "3": $base-spacing * 4,
      "4": $base-spacing * 6,
      "5": $base-spacing * 8,
    ),
  ),
  "margin": (
    "prefix": "m",
    "values": (
      "0": 0,
      "1": $base-spacing,
      "2": $base-spacing * 2,
      "3": $base-spacing * 4,
      "4": $base-spacing * 6,
      "5": $base-spacing * 8,
    ),
  ),
  "margin-top": (
    "prefix": "mt",
    "values": (
      "0": 0,
      "1": $base-spacing,
      "2": $base-spacing * 2,
      "3": $base-spacing * 4,
      "4": $base-spacing * 6,
      "5": $base-spacing * 8,
    ),
  ),
  "margin-right": (
    "prefix": "mr",
    "values": (
      "0": 0,
      "1": $base-spacing,
      "2": $base-spacing * 2,
      "3": $base-spacing * 4,
      "4": $base-spacing * 6,
      "5": $base-spacing * 8,
    ),
  ),
  "margin-bottom": (
    "prefix": "mb",
    "values": (
      "0": 0,
      "1": $base-spacing,
      "2": $base-spacing * 2,
      "3": $base-spacing * 4,
      "4": $base-spacing * 6,
      "5": $base-spacing * 8,
    ),
  ),
  "margin-left": (
    "prefix": "ml",
    "values": (
      "0": 0,
      "1": $base-spacing,
      "2": $base-spacing * 2,
      "3": $base-spacing * 4,
      "4": $base-spacing * 6,
      "5": $base-spacing * 8,
    ),
  ),
  "opacity": (
    "prefix": "o",
    "values": (
      "0": 0,
      "1": 0.1,
      "2": 0.2,
      "3": 0.3,
      "4": 0.4,
      "5": 0.5,
      "6": 0.6,
      "7": 0.7,
      "8": 0.8,
      "9": 0.9,
      "10": 1,
    ),
  ),
  "border-radius": (
    "prefix": "br",
    "values": (
      "default": $base-border-radius,
      "none": 0,
      "xs": math.div($base-border-radius, 4),
      "sm": math.div($base-border-radius, 2),
      "lg": $base-border-radius * 2,
      "full": 50%,
    ),
  ),
  "display": (
    "prefix": "d",
    "values": (
      "none": none,
      "block": block,
      "inline": inline,
      "inline-block": inline-block,
      "flex": flex,
      "inline-flex": inline-flex,
    ),
  ),
  "align-items": (
    "prefix": "align-items",
    "values": (
      "start": flex-start,
      "end": flex-end,
      "center": center,
      "baseline": baseline,
      "stretch": stretch,
    ),
  ),
  "justify-content": (
    "prefix": "justify-content",
    "values": (
      "start": flex-start,
      "end": flex-end,
      "center": center,
      "between": space-between,
      "around": space-around,
      "evenly": space-evenly,
    ),
  ),
  "flex-direction": (
    "prefix": "flex-direction",
    "values": (
      "row": row,
      "row-reverse": row-reverse,
      "column": column,
      "column-reverse": column-reverse,
    ),
  ),
  "flex-wrap": (
    "prefix": "flex-wrap",
    "values": (
      "nowrap": nowrap,
      "wrap": wrap,
      "wrap-reverse": wrap-reverse,
    ),
  ),
  "font-size": (
    "prefix": "fs",
    "values": (
      "sm": $font-size-sm,
      "md": $base-font-size,
      "lg": $font-size-lg,
      "xl": $font-size-xl,
      "xxl": $font-size-xxl,
    ),
  ),
);

// generate utility classes
@each $property, $map in $utilities {
  $prefix: map-get($map, "prefix");
  $values: map-get($map, "values");

  @each $key, $val in $values {
    @if (key== "default") {
      .#{$prefix} {
        #{$property}: $val;
      }
    } @else {
      .#{$prefix}-#{$key} {
        #{$property}: $val;
      }
    }
  }
}
